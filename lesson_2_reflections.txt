What happens when you initialize a repository? Why do you need to do it?
	
	When a repo id initialized a hidden directory called .git is created
	which keeps track of the history of files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	Staging area is an intermediate area between working directory and repository, we can add the selective files from the working directory to the staging area before commiting it to the repository.

How can you use the staging area to make sure you have one commit per logical
change?
	
	staging area can be used to compare with working directory in order to look for any changes in the files in the working directory before u add it  to the staging area. It can also be used to compare it with the repo in order to compare the files in the staging area with the most recent commit before u commit the files in the staging area to the repo.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	Situations such as u want to experiment with a feature, by keeping the original code, we could create a separate branch for experiment feature by preserving the existing code. 

How do the diagrams help you visualize the branch structure?

	It helps by looking at the whole repo with the branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?